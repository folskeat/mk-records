{"ast":null,"code":"import _asyncToGenerator from \"/Users/keatonfolsom/Desktop/College/Winter 2022/CS 260/Creative Projects/project 4/mk-records/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'MushroomCup',\n  data: function data() {\n    return {\n      showing: false,\n      items: []\n    };\n  },\n  created: function created() {\n    this.getItems();\n  },\n  methods: {\n    show: function show() {\n      this.showing = true;\n    },\n    getItems: function getItems() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/api/items\");\n\n              case 3:\n                response = _context.sent;\n                _this.items = response.data;\n                return _context.abrupt(\"return\", true);\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AAEA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,oBADA;AAEAC;AAFA;AAIA,GAPA;AAQAC,SARA,qBAQA;AACA;AACA,GAVA;AAWAC;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAIAC,YAJA,sBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,uBAFA;;AAAA;AAEAC,wBAFA;AAGA;AAHA,iDAIA,IAJA;;AAAA;AAAA;AAAA;AAMAC;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAZA;AAXA","names":["name","data","showing","items","created","methods","show","getItems","axios","response","console"],"sourceRoot":"src/components","sources":["MushroomCup.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"section\">\n      <div class=\"tracks\">\n        <img src=\"data/courses/tracks/mushroom/mario_kart_stadium.webp\" @click=\"show\">\n        <img src=\"data/courses/tracks/mushroom/water_park.webp\" @click=\"show\">\n        <img src=\"data/courses/tracks/mushroom/sweet_sweet_canyon.webp\" @click=\"show\">\n        <img src=\"data/courses/tracks/mushroom/thwomp_ruins.webp\" @click=\"show\">\n      </div>\n    </div>\n\n    <div class=\"break\"></div>\n\n    <div class=\"records\" v-if=\"showing\">\n      <div v-for=\"item in items\" :key=\"item.id\">\n        <h2>{{item.time}}</h2>\n        <p>HI</p>\n      </div>\n    </div>\n\n    <div class=\"break\"></div>\n\n    <div class=\"add\" v-if=\"showing\">\n      <div class=\"form\">\n        <input v-model=\"time\" placeholder=\"Time\">\n        <button @click=\"upload\">Upload</button>\n      </div>\n      <div class=\"upload\" v-if=\"addItem\">\n        <h2>{{addItem.time}}</h2>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.break {\n  flex-basis: 100%;\n  height: 30px;\n}\n\n.section {\n  display: flex;\n  align-items: center;\n  align-content: center;\n  align-self: center;\n  justify-content: center;\n}\n\n.tracks {\n  display: flex;\n  justify-content: space-around;\n\n  width: 1000px;\n  height: 149px;\n}\n\n.tracks img {\n  width: 200px;\n  height: 141px;\n\n  cursor: pointer;\n}\n\n.tracks img:hover {\n  width: 210px;\n  height: 149px;\n}\n</style>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'MushroomCup',\n  data() {\n    return {\n      showing: false,\n      items: [],\n    }\n  },\n  created() {\n    this.getItems();\n  },\n  methods: {\n    show() {\n      this.showing = true;\n    },\n    async getItems() {\n      try {\n        let response = await axios.get(\"/api/items\");\n        this.items = response.data;\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module"}